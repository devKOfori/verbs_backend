# Generated by Django 5.1.2 on 2024-11-17 09:16

import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import helpers.defaults
import helpers.generators
import helpers.storage_paths
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Colleague',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(editable=False, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Colleague',
                'verbose_name_plural': 'Colleagues',
                'db_table': 'colleague',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('code', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
                'db_table': 'color',
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('width', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('height', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
            ],
            options={
                'db_table': 'dimension',
            },
        ),
        migrations.CreateModel(
            name='FrameType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Frame Type',
                'verbose_name_plural': 'Frame Types',
                'db_table': 'frametype',
            },
        ),
        migrations.CreateModel(
            name='OrderPaymentStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('e9206329-2222-446f-9d99-3958f80f6e8d'), primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Order Payment Status',
                'verbose_name_plural': 'Order Payment Statuses',
                'db_table': 'orderpaymentstatus',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('d90a870c-d34f-422c-b714-3263241e5a6e'), primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Order Status',
                'verbose_name_plural': 'Order Statuses',
                'db_table': 'orderstatus',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProductGrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'db_table': 'productgrade',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, max_length=255, unique=True)),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('value_percentage', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('status', models.CharField(choices=[('invalid', 'Invalid'), ('valid', 'Valid')], default='invalid', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Promo Code',
                'verbose_name_plural': 'Promo Codes',
                'db_table': 'promocode',
            },
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(db_index=True, max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('expired', 'Expired'), ('used', 'Used'), ('new', 'New')], default='new', max_length=7)),
            ],
            options={
                'db_table': 'resetpassword',
            },
        ),
        migrations.CreateModel(
            name='ThoughtTheme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Thought Theme',
                'verbose_name_plural': 'Thought Themes',
                'db_table': 'thoughtheme',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('order_number', models.CharField(db_index=True, default=helpers.generators.generate_order_number, max_length=255, unique=True)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('discount', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('total_items_count', models.PositiveIntegerField(default=0)),
                ('total_items_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('shipping_cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_order_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('payment_status', models.ForeignKey(default=helpers.defaults.order_payment_status_default, on_delete=django.db.models.deletion.SET_DEFAULT, to='api.orderpaymentstatus')),
                ('status', models.ForeignKey(default=helpers.defaults.order_status_default, on_delete=django.db.models.deletion.SET_DEFAULT, to='api.orderstatus')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='PaymentInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=6)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.order')),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.paymentmethod')),
            ],
            options={
                'verbose_name': 'Payment Info',
                'verbose_name_plural': 'Payment Infos',
                'db_table': 'paymentinfo',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('qty', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(default='-')),
                ('return_policy', models.TextField(blank=True, null=True)),
                ('discount', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('colors', models.ManyToManyField(to='api.color')),
                ('frame_types', models.ManyToManyField(to='api.frametype')),
                ('sizes', models.ManyToManyField(to='api.dimension')),
                ('grade', models.ForeignKey(default=helpers.defaults.product_grade_default, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='products', to='api.productgrade')),
                ('product_type', models.ForeignKey(default=helpers.defaults.product_type_default, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='products', to='api.producttype')),
                ('themes', models.ManyToManyField(related_name='products', to='api.thoughttheme')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'product',
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('qty', models.PositiveIntegerField(default=1)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('discount', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('product_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.product')),
                ('promo_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.promocode')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'orderitem',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(through='api.OrderItems', to='api.product'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ImageField(upload_to=helpers.storage_paths.product_image_storage_path)),
                ('description', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'db_table': 'productimage',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
                'db_table': 'productreview',
                'ordering': ['-added_at'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='promo_code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.promocode'),
        ),
        migrations.CreateModel(
            name='ShippingInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('shipping_country', django_countries.fields.CountryField(max_length=2)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('shipping_cost', models.DecimalField(decimal_places=2, max_digits=4)),
                ('delivery_period', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_info', to='api.order')),
            ],
            options={
                'verbose_name': 'Shipping Info',
                'verbose_name_plural': 'Shipping Infos',
                'db_table': 'shippinginfo',
            },
        ),
    ]
